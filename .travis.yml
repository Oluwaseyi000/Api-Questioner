language: node_js
node_js: 
  - "stable"
cache:
  directories:
    - "node_modules"

sudo: false
before_install:
  - curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version 1.12.3
  - export PATH=$HOME/.yarn/bin:$PATH
cache:
  yarn: true
env:
  global:
    - CC_TEST_REPORTER_ID=b8409b53a4602ed1e72f219fb3411fc47ce046a27ef0f9ed51d0818982ad46d5
before_script:
  - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
  - chmod +x ./cc-test-reporter
  - ./cc-test-reporter before-build
scripts: {
    "start": "SET NODE_ENV=dev && node server.js",
    "test": "nyc mocha --exit",

    "coverage": "nyc report"} 
    # Pipe the coverage data to Code Climate
after_script:
  - ./cc-test-reporter after-build --exit-code $TRAVIS_TEST_RESULT
 
  - ./cc-test-reporter format-coverage -t simplecov -o coverage/codeclimate.backend.json coverage/backend/.resultset.json # Format backend coverage
  - ./cc-test-reporter format-coverage -t lcov -o coverage/codeclimate.frontend.json coverage/frontend/lcov.info  # Format frontend coverage
  - ./cc-test-reporter sum-coverage coverage/codeclimate.*.json -p 2                  # Sum both coverage parts into coverage/codeclimate.json
  - if [[ "$TRAVIS_TEST_RESULT" == 0 ]]; then ./cc-test-reporter upload-coverage; fi  # Upload coverage/codeclimate.json

    "coverage": "nyc report"}
 feature/get_a_specific_meetup_record
after_success: npm run coverage

